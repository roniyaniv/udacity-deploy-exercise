version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Choose either one of the orbs below
  # welcome: circleci/welcome-orb@0.4.1
  aws-cli: circleci/aws-cli@2.1.0
# Define the jobs we want to run for this project
commands:
  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
          # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name udacityStack-${CIRCLE_WORKFLOW_ID:0:7}

jobs:
  create_infrastructure: 
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name udacityStack-${CIRCLE_WORKFLOW_ID:0:7} \
              --region eu-central-1
  # configure_infrasctructure:
  #   docker:
  #     - image: python:3.7-alpine3.11
  #   steps:
  #     - checkout
  #     - add_ssh_keys:
  #         # You can get this ID in the section where you registered the SSH Key
  #         fingerprints: 
  #           - "57:5f:95:80:1d:44:1f:ba:e8:57:49:82:f6:74:5b:0a"
  #     - run:
  #         name: Install Ansible
  #         command: |
  #           apk add --update ansible
  #     - run:
  #         name: Run Playbook and Configure server
  #         command: |
  #           ansible-playbook -i inventory main-remote.yml      

  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run:
          name: smoke test
          command: |
            return 1 # simulate failure     
      - destroy_environment  
       

# Sequential workflow
workflows:
  # Name the workflow
  deploy:
    jobs:
      - create_infrastructure
      - smoke_test:
          requires: 
            - create_infrastructure